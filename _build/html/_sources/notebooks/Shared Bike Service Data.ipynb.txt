{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Shared Biking Data from Washington, DC\n",
    "\n",
    "In this notebook we look at some data visualizations of this dataset found on Kaggle.\n",
    "\n",
    "https://www.kaggle.com/marklvl/bike-sharing-dataset/home\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import re\n",
    "import urllib.request, urllib.parse, urllib.error\n",
    "from bs4 import BeautifulSoup\n",
    "import ssl\n",
    "import json\n",
    "import csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**We download and read the dataset into a DataFrame.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "bikeDays = pd.read_csv(\"biking/hour.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>instant</th>\n",
       "      <th>dteday</th>\n",
       "      <th>season</th>\n",
       "      <th>yr</th>\n",
       "      <th>mnth</th>\n",
       "      <th>hr</th>\n",
       "      <th>holiday</th>\n",
       "      <th>weekday</th>\n",
       "      <th>workingday</th>\n",
       "      <th>weathersit</th>\n",
       "      <th>temp</th>\n",
       "      <th>atemp</th>\n",
       "      <th>hum</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>casual</th>\n",
       "      <th>registered</th>\n",
       "      <th>cnt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.24</td>\n",
       "      <td>0.2879</td>\n",
       "      <td>0.81</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.2727</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8</td>\n",
       "      <td>32</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.22</td>\n",
       "      <td>0.2727</td>\n",
       "      <td>0.80</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5</td>\n",
       "      <td>27</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.24</td>\n",
       "      <td>0.2879</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2011-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.24</td>\n",
       "      <td>0.2879</td>\n",
       "      <td>0.75</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   instant      dteday  season  yr  mnth  hr  holiday  weekday  workingday  \\\n",
       "0        1  2011-01-01       1   0     1   0        0        6           0   \n",
       "1        2  2011-01-01       1   0     1   1        0        6           0   \n",
       "2        3  2011-01-01       1   0     1   2        0        6           0   \n",
       "3        4  2011-01-01       1   0     1   3        0        6           0   \n",
       "4        5  2011-01-01       1   0     1   4        0        6           0   \n",
       "\n",
       "   weathersit  temp   atemp   hum  windspeed  casual  registered  cnt  \n",
       "0           1  0.24  0.2879  0.81        0.0       3          13   16  \n",
       "1           1  0.22  0.2727  0.80        0.0       8          32   40  \n",
       "2           1  0.22  0.2727  0.80        0.0       5          27   32  \n",
       "3           1  0.24  0.2879  0.75        0.0       3          10   13  \n",
       "4           1  0.24  0.2879  0.75        0.0       0           1    1  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bikeDays.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**It is good to know something about the size of the dataset.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17379"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(bikeDays)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**And you should always examine the types of your data. Don't rely on Pandas or any other library to always get all the types correct. A type can be inferred incorrectly if you have some dirt in your data (for instance one row might have an incorrect value and that could change the type of the whole column.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "instant         int64\n",
       "dteday         object\n",
       "season          int64\n",
       "yr              int64\n",
       "mnth            int64\n",
       "hr              int64\n",
       "holiday         int64\n",
       "weekday         int64\n",
       "workingday      int64\n",
       "weathersit      int64\n",
       "temp          float64\n",
       "atemp         float64\n",
       "hum           float64\n",
       "windspeed     float64\n",
       "casual          int64\n",
       "registered      int64\n",
       "cnt             int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bikeDays.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Box and Whisker Plot\n",
    "\n",
    "**We'll choose to compute a box and whisker plot to understand something about the distribution of the data for at least the continuous data columns. Discrete values may also be analyzed this way as well. First we put together a list of the for columns we wish to analyze.** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = [bikeDays[\"temp\"], bikeDays[\"atemp\"], bikeDays[\"hum\"], bikeDays[\"windspeed\"]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Then we plot the four columns. The box represents the middle 50% of the data. The line in the box is the median value. The upper and lower ends of the box are the 1st and 3rd Quartile values. The ends of the whiskers are the 3rd Quartile + (1.5\\*IQR) and the 1st Quartile - (1.5\\*IQR). The IQR is the 3rd-1st Quartile. The dots are the outliers outside the range of most values. It may be that you want to eliminate those rows that lie outside the normal distribution of values. The values on the x-axis are shown as normalized to the range. Normalized means they are shown as percentages between 0 and 1.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.boxplot(data, False, \"rs\", False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
